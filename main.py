from loguru import logger
from pyrogram import Client, filters
from pyrogram.types import Message

from src.config import Config
from src.payments.lolz import LolzCookies, LolzPayment
from src.payments.qiwi import QiwiPayment
from src.payments.crypto import CryptoPay
from src.hastebin.hastebin import HastebinPaste

lolz_cookies = LolzCookies().get_cookies()
config = Config.load_from_file("config.toml")

app = Client('my_account', api_id=config.userbot.api_id, api_hash=config.userbot.api_hash)


@app.on_message(filters=filters.command(prefixes='!', commands='–∫–∏–≤–∏'))
async def qiwi_payment(client: Client, message: Message):
    if message.from_user.id == config.userbot.admin_id:
        qiwi = QiwiPayment(amount=int(message.text.split()[1]))
        bill = await qiwi.create_bill()
        app.loop.create_task(qiwi.check_bill(client, message.chat.id))
        await message.edit_text(
            f'üí∞–û–ø–ª–∞—Ç–∏ —Å—á–µ—Ç ({message.text.split()[1]} —Ä—É–±–ª–µ–π) –ø–æ <a href={bill}>—Å—Å—ã–ª–∫–µ</a>\n\n(–°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {int(config.payment_settings.time_check / 60)} –º–∏–Ω—É—Ç)')


@app.on_message(filters=filters.command(prefixes='!', commands='–ª–æ–ª–∑'))
async def lolz_payment(client: Client, message: Message):
    if message.from_user.id == config.userbot.admin_id:
        lolz = LolzPayment(amount=int(message.text.split()[1]), comment=str(message.text.split()[2]),
                           cookies=lolz_cookies)
        app.loop.create_task(lolz.check_bill(client, message.chat.id))
        await message.edit_text(
            f'üí∞–û–ø–ª–∞—Ç–∏ —Å—á–µ—Ç ({message.text.split()[1]} —Ä—É–±–ª–µ–π) –ø–æ <a href=https://lolz.guru/market/balance/transfer?amount={message.text.split()[1]}&username={config.lolz.username}&comment={message.text.split()[2]}>—Å—Å—ã–ª–∫–µ</a>\n\n(–°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {int(config.payment_settings.time_check / 60)} –º–∏–Ω—É—Ç)')


@app.on_message(filters=filters.command(prefixes='!', commands='–∫—Ä–∏–ø—Ç–∞'))
async def crypto_payment(client: Client, message: Message):
    if message.from_user.id == config.userbot.admin_id:
        crypto = CryptoPay(amount=int(message.text.split()[1]), order_id=str(message.text.split()[2]))
        await message.edit_text(f'üí∞–û–ø–ª–∞—Ç–∏ —Å—á–µ—Ç ({message.text.split()[1]} —Ä—É–±–ª–µ–π) –ø–æ <a href={await crypto.create_bill()}>—Å—Å—ã–ª–∫–µ</a>\n\n(–°—á–µ—Ç –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω {int(config.payment_settings.time_check / 60)} –º–∏–Ω—É—Ç)')
        app.loop.create_task(crypto.check_bill(client, message.chat.id))


@app.on_message(filters=filters.command(prefixes='!', commands='–∫–æ–¥'))
async def code_paste(client: Client, message: Message):
    if message.from_user.id == config.userbot.admin_id:
        if message.reply_to_message:
            async with HastebinPaste(message.reply_to_message.text) as paste:
                try:
                    await message.reply_to_message.delete()
                except:
                    pass
                await message.edit_text(f'üìù–ö–æ–¥: <a href={await paste.paste()}>—Å—Å—ã–ª–∫–∞</a>')


if __name__ == '__main__':
    logger.success('–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –Ω–∞—á–∞–ª —Å–≤–æ—é —Ä–∞–±–æ—Ç—É! –ü–æ–¥–æ–∂–¥–∏ –µ—â–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–µ–∫—É–Ω–¥ –ø—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É!')
    app.run()
